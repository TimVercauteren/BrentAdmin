@page "/detail/{Id:int}"
@using BrentWiels.Data.Interfaces
@using BrentWiels.Viewmodels

@inject IKlantenDataService KlantenService
@inject IOfferteDataService OfferteService
@inject NavigationManager NavigationManager
@inject IJSRuntime js





@if (customer == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="row">
            <h1>Detail klant</h1>
        </div>
        <div class="row">
            <div class="col-sm">
                <p>Naam: @customer.Naam</p>
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <p> Adres: @customer.FullAdress</p>
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <p>Btwnummer: @customer.BtwNummer</p>
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <p>Email: @customer.Email</p>
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <p>Telefoon: @customer.TelefoonNummer</p>
            </div>
        </div>

        <div class="row">
            <div class="col-sm">
                <button class="btn btn-success" @onclick="AddOfferteVoorKlant">Maak offerte</button>
            </div>
            <div class="col-sm">
                <button class="btn btn-danger" @onclick="DeleteCustomer">Verwijder Klant</button>
            </div>
        </div>
        <hr />
        @if (Offertes != null && Offertes.Count > 0)
        {
            <div class="row">
                <h2>Offertes</h2>
            </div>
            foreach (var offerte in Offertes)
            {
                <div class="row">
                    <div class="col-sm">
                        <h3>@offerte.OfferteNummer</h3>
                    </div>
                    <div class="col-sm">
                        Van @offerte.Datum
                    </div>
                    <div class="col-sm">
                        Tot @offerte.VervalDatum
                    </div>
                    @*<div class="col-sm">
                            <button class="btn-success" @onclick="(async () => await DownloadPdf(offerte.Id, offerte.OfferteNummer))">Download PDF</button>
                        </div>*@
                    <div class="col-sm">
                        <button class="btn-success" @onclick="(() => Preview(offerte.Id))">Preview Offerte</button>
                    </div>
                    <div class="col-sm">
                        <button class="btn-success" @onclick="(async () => await DownloadExcel(offerte.Id, offerte.OfferteNummer))">Download PDF</button>
                    </div>
                    <div class="col-sm">
                        <button class="btn-danger" @onclick="(async () => await Delete(offerte.Id))">Delete</button>
                    </div>
                </div>
            }
        }
    </div>

}

@code {
    [Parameter]
    public int Id { get; set; }

    KlantViewModel customer;
    IList<OfferteCompactDto> Offertes;


    protected override async Task OnInitializedAsync()
    {
        await ReloadPage();
    }

    private async Task ReloadPage()
    {
        customer = await KlantenService.GetCustomer(Id);
        Offertes = await KlantenService.GetOffertesForClient(Id);
    }

    private void AddOfferteVoorKlant()
    {
        NavigationManager.NavigateTo($"/offerte/add/{Id}");
    }

    private async Task DownloadPdf(int offerteId, string offerteNummer)
    {
        var bytes = await OfferteService.GetOfferteBytes(offerteId);
        await FileUtil.SaveAs(js, $"{offerteNummer}.pdf", bytes);

    }

    private void Preview(int offerteId)
    {
        NavigationManager.NavigateTo($"/offertes/preview2/{offerteId}");
    }

    private async Task DownloadExcel(int offerteId, string offerteNummer)
    {
        var bytes = await OfferteService.GetOfferteBytes(offerteId);
        await FileUtil.SaveAs(js, $"{offerteNummer}.pdf", bytes);

    }

    private async Task Delete(int offerteId)
    {
        await OfferteService.DeleteOfferte(offerteId);
        await ReloadPage();

    }

    private async Task DeleteCustomer()
    {
        await KlantenService.RemoveCustomer(Id);
        NavigationManager.NavigateTo($"/klanten");

    }
}
